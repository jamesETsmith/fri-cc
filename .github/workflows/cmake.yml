name: CMake

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++-9, g++-10, clang++-10, clang++-11]
        python-version: ['3.9']
       
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install software requirements
      run: sudo apt-get install libblas-dev liblapack-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CXX: ${{ matrix.compiler }}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --verbose

    - name: Install
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: make install

    - name: Python Install
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        python -m pip install matplotlib
        python -m pip install git+https://github.com/pyscf/pyscf
        python -m pip install -e .

    - name: Python Tests
      working-directory: ${{github.workspace}}
      run: pytest -v fricc/tests
